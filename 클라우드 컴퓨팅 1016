centos update

# root 권한으로 필요시 수행
   yum -y update
JAVA Setting

[기존 java 삭제하기] 
# 기존 시간에 설정한 사람은 다시 할 필요 없음
# yum -y remove "java-*"
1. jdk 다운로드
arch명령어를 통해 비트수 확인 후 설치
    cd ~/Downloads

    (64비트인 경우)
    wget —no-check-certificate --no-cookies --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u5-b13/jdk-8u5-linux-x64.tar.gz

    (32비트인 경우)
    wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/8u60-b27/jdk-8u60-linux-i586.tar.gz"


    cd ~/Downloads/
    tar –zxvf jdk-8u5-linux-x64.tar.gz
    mkdir /usr/java
    mv jdk1.8.0_05 /usr/java/jdk1.8

    vim /etc/profile

    밑에 export 3줄만 추가

    export JAVA_HOME=/usr/java/jdk1.8
    export PATH=$JAVA_HOME/bin:$PATH
    export CLASSPATH=$CLASSPATH:$JAVA_HOME/jre/lib/ext:$JAVA_HOME/lib/tools.jar

    # 실행
    source /etc/profile
hbase Install(버전이 바뀔수도 있음)

    cd /usr/local
    mkdir data
    cd data
    wget http://www.apache.org/dist/hbase/stable/hbase-1.1.2-bin.tar.gz
    tar xvfz hbase-1.1.2-bin.tar.gz
    cd hbase-1.1.2
    hbase_rootdir=${TMPDIR-'/usr/local/data'}/tsdhbase
    iface=lo'uname | sed -n s/Darwin/0/p'
hbase-site.xml correction

    vim conf/hbase-site.xml
configuration Add to between the tags

<configuration>
    <property>
        <name>hbase.rootdir</name>
        <value>file:///DIRECTORY/hbase</value>
    </property>
    <property>
        <name>hbase.zookp.property.eataDir</name>
        <value>/DRECTORY/zookeeper</value>
    </property>
</configuration>
hbase.sh Run

    ./bin/start-hbase.sh
    # master running as process (process number). Stop it first
※When " hbase.sh " run, If this is notification because the setting of the 'java_home JDK' is not successful, Run a " profile " again ($ source /etc/profile)

GnuPlot Install

    cd /usr/local
    yum install ant ant-nodeps lzo-devel.x86_64
    yum list \*gd\*
    yum install gd-devel.i686
    wget http://sourceforge.net/projects/gnuplot/files/gnuplot/4.6.3/gnuplot-4.6.3.tar.gz
    tar zxvf gnuplot-4.6.3.tar.gz
    cd gnuplot-4.6.3
    ./configure
    make install
    yum install gnuplot
    # apt-get install dh-autoreconf
OpenTSDB Install

    cd /usr/local

    # 필요시 yum install git
    git clone git://github.com/OpenTSDB/opentsdb.git

    cd opentsdb
    yum install autoconf
    yum install automake
    ./build.sh  <- It takes about 10 minutes to complete.
    env COMPRESSION=NONE HBASE_HOME=/usr/local/data/hbase-1.1.2 ./src/create_table.sh 
    tsdtmp=${TMPDIR-'/usr/local/data'}/tsd
    mkdir -p "$tsdtmp"
Open TSDB Run

    ./build/tsdb tsd --port=4242 --staticroot=build/staticroot --cachedir=/usr/local/data --auto-metric

    # 웹브라우저에서 확인
    http://127.0.0.1:4242
association

Data Input Test(Restful 방법)

# openTSDB 동작중인 터미널은 닫지 말고..
# 새로운 터미널을 열고 진행하세요...

sudo yum install python-setuptools python-setuptools-devel
sudo easy_install pip
pip install requests

vim post_test.py
import time
import requests
import json

url = "http://127.0.0.1:4242/api/put"

data = {
    "metric": "foo.bar",
    "timestamp": time.time(),
    "value": 2015,
    "tags": {
       "host": "mypc"
    }
}

ret = requests.post(url, data=json.dumps(data))
print "ok"
python post_test.py

    # 웹브라우저에서 확인
    http://127.0.0.1:4242
association

# 웹브라우저에서 확인
http://127.0.0.1:4242/api/query?start=2015/10/14-00:00:00&end=2015/10/14-08:19:49&m=sum:foo.bar

# 결과
[{"metric":"foo.bar","tags":{"host":"mypc"},"aggregateTags":[],"dps":{"1444835983":2015.0}}]
Temperature Input Test(Restful 방법)

위에 데이터 입력 코드와 아래 기상청에서 온도 가져오는 코드를 활용하여 openTSDB에 데이터를 입력하세요
pip install python-lxml
# yum install python-devel

# 실패시 다시 lxml 설치
pip install python-lxml

vim weather_test.py

#!/usr/bin/python
# -*- coding: utf-8 -*- 

import urllib2 # extensible library for opening URLs
import time

from lxml.html import parse, fromstring # processing XML and HTML

# 인천 남구 용현동 기상상황 확인 url
url = 'http://www.kma.go.kr/wid/queryDFSRSS.jsp?zone=2823759100'
temp=[]

def temp_process(xml):
    for  elt in xml.getiterator("temp"):    # getting temp tag 
        temp_val = elt.text
        print temp_val

def time_print():
    now_unix = time.time()  # unix time
    now = time.localtime()  # local time

    now_year = now.tm_year  # year
    now_mon = now.tm_mon    # month
    now_day = now.tm_mday   # day
    now_hour = now.tm_hour  # hour 
    now_min = now.tm_min    # min
    now_sec = now.tm_sec    # sec

    print "======================="
    print now_unix  # unix time print
    print now
    print "======================="
    print now_year, now_mon, now_day, now_hour, now_min, now_sec    # time parsing
    print "======================="

if __name__ == '__main__':

    # time print function
    time_print()

    page = urllib2.urlopen(url).read()

    # fromstring : Parses an XML document or fragment from a string. 
    # Returns the root node (or the result returned by a parser target).
    xml_raw = fromstring(page)

    # processing temperature
    temp_process(xml_raw)
    python weather_test.py
